{"version":3,"sources":["components/HamBurgerMenu.jsx","App.js","reportWebVitals.js","index.js"],"names":["makeStyles","menuH","float","iconB","marginRight","marginTop","width","height","backgroundColor","color","stroke","icon","fontSize","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAQkBA,YAAW,CAC3BC,MAAO,CACTC,MAAO,SAELC,MAAO,CACLC,YAAa,QACbC,UAAW,QACXH,MAAO,QACPI,MAAO,OACPC,OAAQ,OACRC,gBAAiB,QACjBC,MAAO,QACPC,OAAQ,QACR,UAAW,CACTD,MAAO,UACPC,OAAQ,UACRF,gBAAiB,WAEnB,6BAA8B,CAC5BF,MAAO,OACPC,OAAQ,OACRH,YAAa,QACbC,UAAW,SAGb,4BAA6B,CAC3BC,MAAO,OACPC,OAAQ,OACRH,YAAa,QACbC,UAAW,SAGb,4BAA6B,CAC3BC,MAAO,OACPC,OAAQ,OACRH,YAAa,OACbC,UAAW,UAIfM,KAAM,CACJC,SAAU,GACV,6BAA8B,CAC5BA,SAAU,IAEZ,4BAA6B,CAC3BA,SAAU,IAEZ,4BAA6B,CAC3BA,SAAU,OC7CDC,MARf,WACE,OACE,qBAAKC,UAAU,SCMJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.762fa5d3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst useStyles = makeStyles({\r\n  menuH: {\r\nfloat: 'right'\r\n  },\r\n  iconB: {\r\n    marginRight: \"-30px\",\r\n    marginTop: \"-35px\",\r\n    float: \"right\",\r\n    width: \"90px\",\r\n    height: \"90px\",\r\n    backgroundColor: \"white\",\r\n    color: 'green',\r\n    stroke: 'green',\r\n    '&:hover': {\r\n      color: \"#242d38\",\r\n      stroke: \"#242d38\",\r\n      backgroundColor: '#efd592'\r\n    },\r\n    '@media (max-width: 1100px)': {\r\n      width: '90px',\r\n      height: '90px',\r\n      marginRight: '-20px',\r\n      marginTop: '-25px',\r\n  \r\n    },\r\n    '@media (max-width: 613px)': {\r\n      width: '70px',\r\n      height: '70px',\r\n      marginRight: '-10px',\r\n      marginTop: '-15px',\r\n\r\n    },\r\n    '@media (max-width: 430px)': {\r\n      width: '60px',\r\n      height: '60px',\r\n      marginRight: '-5px',\r\n      marginTop: '-20px',\r\n\r\n    }\r\n  },\r\n  icon: {\r\n    fontSize: 65,\r\n    '@media (max-width: 1100px)': {\r\n      fontSize: 55,\r\n    },\r\n    '@media (max-width: 613px)': {\r\n      fontSize: 45,\r\n    },\r\n    '@media (max-width: 430px)': {\r\n      fontSize: 35,\r\n    },\r\n  }\r\n});\r\n\r\nconst options = [\r\n  'Vmi1',\r\n  'Vmi2',\r\n  'Vmi2'\r\n]\r\n\r\nfunction MenuH() {\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.menuH}>\r\n      <IconButton className={classes.iconB}\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}>\r\n\r\n        <MenuIcon className={classes.icon} />\r\n      </IconButton>\r\n\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: '150px',\r\n            minwidth: '150px',\r\n            color: '#efd592',\r\n            backgroundColor: '#242d38',\r\n            marginLeft: '-100px'\r\n          },\r\n        }}>\r\n        {options.map((option) => (\r\n          <MenuItem key={uuidv4()} selected={option === 'Pyxis'} onClick={handleClose}>\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenuH;","import '../src/styles/App.css';\nimport HamBurgerMenu from '../src/components/HamBurgerMenu';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}